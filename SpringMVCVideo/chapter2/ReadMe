我们在本章学习开涛学MVC的第二章 
再次学习SpringMVC的步骤
并再次尝试HelloWorld示例

参考文献： 开涛学SpringMVC

SpringMVC核心架构的具体流程步骤如下:
1、 首先用户发送请求——>DispatcherServlet，前端控制器收到请求后自己不进行处理，而是委托给其他的解析器进行处理，作为统一访问点，进行全局的流程控制;
2、 DispatcherServlet——>HandlerMapping， HandlerMapping 将会把请求映射为 HandlerExecutionChain 对象(包含一个Handler处理器(页面控制器)对象、多个 HandlerInterceptor 拦截器)对象，通过这种策略模式，很容易添加新 的映射策略;
3、 DispatcherServlet——>HandlerAdapter，HandlerAdapter 将会把处理器包装为适配器，从而支持多种类型的处理器， 即适配器设计模式的应用，从而很容易支持很多类型的处理器;
4、 HandlerAdapter——>处理器功能处理方法的调用，HandlerAdapter 将会根据适配的结果调用真正的处理器的功能处 理方法，完成功能处理;并返回一个 ModelAndView 对象(包含模型数据、逻辑视图名);
5、 ModelAndView 的逻辑视图名——> ViewResolver， ViewResolver 将把逻辑视图名解析为具体的 View，通过这种策 略模式，很容易更换其他视图技术;
6、 View——>渲染，View 会根据传进来的 Model 模型数据进行渲染，此处的 Model 实际是一个 Map 数据结构，因此 很容易支持其他视图技术;
7、返回控制权给 DispatcherServlet，由 DispatcherServlet 返回响应给用户，到此一个流程结束。


1,  请求如何给前端控制器?                                  在 web.xml 中进行部署描述
2、 前端控制器如何根据请求信息选择页面控制器进行功能处理?     配置 HandlerMapping 进行映射 
3、 如何支持多种页面控制器呢?                               配置 HandlerAdapter 从而支持多种类型的页面控制器
4、 如何页面控制器如何使用业务对象?                         利用 Spring IoC 容器的依赖注入功能
5、 页面控制器如何返回模型数据?                             使用 ModelAndView 返回
6、 前端控制器如何根据页面控制器返回的逻辑视图名选择具体的视图进行渲染?       使用 ViewResolver 进行解析 
7、 不同的视图技术如何使用相应的模型数据?                    因为 Model 是一个 Map 数据结构，很容易支持其他视图技术


1、 DispatcherServlet 在 web.xml 中的部署描述，从而拦截请求到 Spring Web MVC 
2、 HandlerMapping 的配置，从而将请求映射到处理器
3、 HandlerAdapter 的配置，从而支持多种类型的处理器
4、 ViewResolver 的配置，从而将逻辑视图名解析为具体视图技术 
5、处理器(页面控制器)的配置，从而进行功能处理


HelloWorld步骤
1、 前端控制器 DispatcherServlet; 
2、 HandlerMapping
3、 HandlerAdapter
4、 ViewResolver
5、 处理器/页面控制器 
6、 视图

1，首先我发送请求 http://localhost:9080/spring2/hello  到web容器
2，web 容器根据“/hello”路径映射到 DispatcherServlet(url-pattern 为/)进行处理;
3，DispatcherServlet——>BeanNameUrlHandlerMapping 进行请求到处理的映射，BeanNameUrlHandlerMapping 将“/hello”路径直接映射到名字为“/hello”的 Bean 进行处理，即 HelloWorldController，BeanNameUrlHandlerMapping将其包装为 HandlerExecutionChain;
4，SimpleControllerHandlerAdapter将 HandlerExecutionChain 中的处理器(HelloWorldController)适配为 SimpleControllerHandlerAdapter;
5，SimpleControllerHandlerAdapter 将会调用处理器的 handleRequest 方法进行功能处理，该处理方法返回一个 ModelAndView 给 DispatcherServlet
6，hello(ModelAndView 的逻辑视图名)——>InternalResourceViewResolver， InternalResourceViewResolver 使用JstlView，具体视图页面在/WEB-INF/jsp/hello.jsp;
7， JstlView(/WEB-INF/jsp/hello.jsp)将在处理器传入的模型数据(message=HelloWorld!)在视图中展示出来;
8，返回控制权给 DispatcherServlet，由 DispatcherServlet 返回响应给用户，到此一个流程结束
